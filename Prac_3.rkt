#lang racket
(display  "1 Задание. Есть два списка. Если первый элемент списка есть натуральное число, то возвратить
второй список, иначе возвратить список из головы второго и хвоста первого." )
(display "\nВведите первый список в формате (1 2 3) или (a b c)")
(define a (read))
(display "Введите первый список в формате (1 2 3) или (a b c)")
(define b (read))
(if (>= (car a) 1)
    (display b)
       (display (cons (car b)(cdr a))))
(display  "\n")

(display "\n12 Задание. Есть 2 списка, например, (1 2 3 4 5) и (7 6 5 7). Если произведение первых
элементов исходных списков есть положительное число, то объединить в
результирующий список последние элементы. В противном случае
построить список из последнего элемента первого списка и хвоста
второго.")
(display "\nВведите первый числовой список в формате (1 2 3)")
(define c (read))
(display "Введите второй числовой список в формате (-1 2 3)")
(define d (read))
(if (> (* (car c)(car d)) 0)
    (display (list (last c)(last d)))
       (display (cons (last c)(cdr d))))
(display  "\n")

(display  "\n13 Задание. Есть три числа. Построить список из кубов этих чисел, если все три числа
– нечетные, возвратить сумму чисел – иначе.")
(display "\nВведите список из трех чисел в формате (1 2 3)")
(define lst (read))
(define s1 (car lst))
(define s2 (second lst))
(define s3 (last lst))
(if (and (odd? s1) (odd? s2) (odd? s3))
    (display (list (expt s1 3) (expt s2 3) (expt s3 3)))
        (display (+ s1 s2 s3)))
       